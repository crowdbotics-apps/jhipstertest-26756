{"remainingRequest":"/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/node_modules/thread-loader/dist/cjs.js??ruleSet[1].rules[0].use[2]!/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/node_modules/ts-loader/index.js??ruleSet[1].rules[0].use[3]!/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/src/main/webapp/app/modules/administration/health/health.tsx","dependencies":[{"path":"/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/src/main/webapp/app/modules/administration/health/health.tsx","mtime":1621189592443},{"path":"/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/node_modules/react-hot-loader/webpack.js","mtime":499162500000},{"path":"/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/node_modules/ts-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7CmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7CmltcG9ydCB7IFRyYW5zbGF0ZSB9IGZyb20gJ3JlYWN0LWpoaXBzdGVyJzsKaW1wb3J0IHsgVGFibGUsIEJhZGdlLCBDb2wsIFJvdywgQnV0dG9uIH0gZnJvbSAncmVhY3RzdHJhcCc7CmltcG9ydCB7IEZvbnRBd2Vzb21lSWNvbiB9IGZyb20gJ0Bmb3J0YXdlc29tZS9yZWFjdC1mb250YXdlc29tZSc7CmltcG9ydCB7IHN5c3RlbUhlYWx0aCB9IGZyb20gJy4uL2FkbWluaXN0cmF0aW9uLnJlZHVjZXInOwppbXBvcnQgSGVhbHRoTW9kYWwgZnJvbSAnLi9oZWFsdGgtbW9kYWwnOwpleHBvcnQgY29uc3QgSGVhbHRoUGFnZSA9IChwcm9wcykgPT4gewogICAgY29uc3QgW2hlYWx0aE9iamVjdCwgc2V0SGVhbHRoT2JqZWN0XSA9IHVzZVN0YXRlKHt9KTsKICAgIGNvbnN0IFtzaG93TW9kYWwsIHNldFNob3dNb2RhbF0gPSB1c2VTdGF0ZShmYWxzZSk7CiAgICB1c2VFZmZlY3QoKCkgPT4gewogICAgICAgIHByb3BzLnN5c3RlbUhlYWx0aCgpOwogICAgfSwgW10pOwogICAgY29uc3QgZ2V0U3lzdGVtSGVhbHRoID0gKCkgPT4gewogICAgICAgIGlmICghcHJvcHMuaXNGZXRjaGluZykgewogICAgICAgICAgICBwcm9wcy5zeXN0ZW1IZWFsdGgoKTsKICAgICAgICB9CiAgICB9OwogICAgY29uc3QgZ2V0U3lzdGVtSGVhbHRoSW5mbyA9IChuYW1lLCBoZWFsdGhPYmopID0+ICgpID0+IHsKICAgICAgICBzZXRTaG93TW9kYWwodHJ1ZSk7CiAgICAgICAgc2V0SGVhbHRoT2JqZWN0KE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgaGVhbHRoT2JqKSwgeyBuYW1lIH0pKTsKICAgIH07CiAgICBjb25zdCBoYW5kbGVDbG9zZSA9ICgpID0+IHNldFNob3dNb2RhbChmYWxzZSk7CiAgICBjb25zdCByZW5kZXJNb2RhbCA9ICgpID0+IFJlYWN0LmNyZWF0ZUVsZW1lbnQoSGVhbHRoTW9kYWwsIHsgaGVhbHRoT2JqZWN0OiBoZWFsdGhPYmplY3QsIGhhbmRsZUNsb3NlOiBoYW5kbGVDbG9zZSwgc2hvd01vZGFsOiBzaG93TW9kYWwgfSk7CiAgICBjb25zdCB7IGhlYWx0aCwgaXNGZXRjaGluZyB9ID0gcHJvcHM7CiAgICBjb25zdCBkYXRhID0gKGhlYWx0aCB8fCB7fSkuY29tcG9uZW50cyB8fCB7fTsKICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudCgiZGl2IiwgbnVsbCwKICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJoMiIsIHsgaWQ6ICJoZWFsdGgtcGFnZS1oZWFkaW5nIiwgImRhdGEtY3kiOiAiaGVhbHRoUGFnZUhlYWRpbmciIH0sICJIZWFsdGggQ2hlY2tzIiksCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgicCIsIG51bGwsCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQnV0dG9uLCB7IG9uQ2xpY2s6IGdldFN5c3RlbUhlYWx0aCwgY29sb3I6IGlzRmV0Y2hpbmcgPyAnYnRuIGJ0bi1kYW5nZXInIDogJ2J0biBidG4tcHJpbWFyeScsIGRpc2FibGVkOiBpc0ZldGNoaW5nIH0sCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEZvbnRBd2Vzb21lSWNvbiwgeyBpY29uOiAic3luYyIgfSksCiAgICAgICAgICAgICAgICAiXHUwMEEwIiwKICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoVHJhbnNsYXRlLCB7IGNvbXBvbmVudDogInNwYW4iLCBjb250ZW50S2V5OiAiaGVhbHRoLnJlZnJlc2guYnV0dG9uIiB9LCAiUmVmcmVzaCIpKSksCiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3csIG51bGwsCiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29sLCB7IG1kOiAiMTIiIH0sCiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFRhYmxlLCB7IGJvcmRlcmVkOiB0cnVlLCAiYXJpYS1kZXNjcmliZWRieSI6ICJoZWFsdGgtcGFnZS1oZWFkaW5nIiB9LAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRoZWFkIiwgbnVsbCwKICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidHIiLCBudWxsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgidGgiLCBudWxsLCAiU2VydmljZSBOYW1lIiksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0aCIsIG51bGwsICJTdGF0dXMiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRoIiwgbnVsbCwgIkRldGFpbHMiKSkpLAogICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRib2R5IiwgbnVsbCwgT2JqZWN0LmtleXMoZGF0YSkubWFwKChjb25maWdQcm9wS2V5LCBjb25maWdQcm9wSW5kZXgpID0+IGNvbmZpZ1Byb3BLZXkgIT09ICdzdGF0dXMnID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRyIiwgeyBrZXk6IGNvbmZpZ1Byb3BJbmRleCB9LAogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ZCIsIG51bGwsIGNvbmZpZ1Byb3BLZXkpLAogICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KCJ0ZCIsIG51bGwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJhZGdlLCB7IGNvbG9yOiBkYXRhW2NvbmZpZ1Byb3BLZXldLnN0YXR1cyAhPT0gJ1VQJyA/ICdkYW5nZXInIDogJ3N1Y2Nlc3MnIH0sIGRhdGFbY29uZmlnUHJvcEtleV0uc3RhdHVzKSksCiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoInRkIiwgbnVsbCwgZGF0YVtjb25maWdQcm9wS2V5XS5kZXRhaWxzID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoImEiLCB7IG9uQ2xpY2s6IGdldFN5c3RlbUhlYWx0aEluZm8oY29uZmlnUHJvcEtleSwgZGF0YVtjb25maWdQcm9wS2V5XSkgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRm9udEF3ZXNvbWVJY29uLCB7IGljb246ICJleWUiIH0pKSkgOiBudWxsKSkpIDogbnVsbCkpKSkpLAogICAgICAgIHJlbmRlck1vZGFsKCkpKTsKfTsKY29uc3QgbWFwU3RhdGVUb1Byb3BzID0gKHN0b3JlU3RhdGUpID0+ICh7CiAgICBoZWFsdGg6IHN0b3JlU3RhdGUuYWRtaW5pc3RyYXRpb24uaGVhbHRoLAogICAgaXNGZXRjaGluZzogc3RvcmVTdGF0ZS5hZG1pbmlzdHJhdGlvbi5sb2FkaW5nLAp9KTsKY29uc3QgbWFwRGlzcGF0Y2hUb1Byb3BzID0geyBzeXN0ZW1IZWFsdGggfTsKZXhwb3J0IGRlZmF1bHQgY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoSGVhbHRoUGFnZSk7Cg=="},{"version":3,"file":"/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/src/main/webapp/app/modules/administration/health/health.tsx","sourceRoot":"","sources":["/Users/jesusviloria/Documents/Crowdbotics/APTariffs/misc/apptest/src/main/webapp/app/modules/administration/health/health.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Translate } from 'react-jhipster';\nimport { Table, Badge, Col, Row, Button } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { IRootState } from 'app/shared/reducers';\nimport { systemHealth } from '../administration.reducer';\nimport HealthModal from './health-modal';\n\nexport interface IHealthPageProps extends StateProps, DispatchProps {}\n\nexport const HealthPage = (props: IHealthPageProps) => {\n  const [healthObject, setHealthObject] = useState({});\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    props.systemHealth();\n  }, []);\n\n  const getSystemHealth = () => {\n    if (!props.isFetching) {\n      props.systemHealth();\n    }\n  };\n\n  const getSystemHealthInfo = (name, healthObj) => () => {\n    setShowModal(true);\n    setHealthObject({ ...healthObj, name });\n  };\n\n  const handleClose = () => setShowModal(false);\n\n  const renderModal = () => <HealthModal healthObject={healthObject} handleClose={handleClose} showModal={showModal} />;\n\n  const { health, isFetching } = props;\n  const data = (health || {}).components || {};\n\n  return (\n    <div>\n      <h2 id=\"health-page-heading\" data-cy=\"healthPageHeading\">\n        Health Checks\n      </h2>\n      <p>\n        <Button onClick={getSystemHealth} color={isFetching ? 'btn btn-danger' : 'btn btn-primary'} disabled={isFetching}>\n          <FontAwesomeIcon icon=\"sync\" />\n          &nbsp;\n          <Translate component=\"span\" contentKey=\"health.refresh.button\">\n            Refresh\n          </Translate>\n        </Button>\n      </p>\n      <Row>\n        <Col md=\"12\">\n          <Table bordered aria-describedby=\"health-page-heading\">\n            <thead>\n              <tr>\n                <th>Service Name</th>\n                <th>Status</th>\n                <th>Details</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(data).map((configPropKey, configPropIndex) =>\n                configPropKey !== 'status' ? (\n                  <tr key={configPropIndex}>\n                    <td>{configPropKey}</td>\n                    <td>\n                      <Badge color={data[configPropKey].status !== 'UP' ? 'danger' : 'success'}>{data[configPropKey].status}</Badge>\n                    </td>\n                    <td>\n                      {data[configPropKey].details ? (\n                        <a onClick={getSystemHealthInfo(configPropKey, data[configPropKey])}>\n                          <FontAwesomeIcon icon=\"eye\" />\n                        </a>\n                      ) : null}\n                    </td>\n                  </tr>\n                ) : null\n              )}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n      {renderModal()}\n    </div>\n  );\n};\n\nconst mapStateToProps = (storeState: IRootState) => ({\n  health: storeState.administration.health,\n  isFetching: storeState.administration.loading,\n});\n\nconst mapDispatchToProps = { systemHealth };\n\ntype StateProps = ReturnType<typeof mapStateToProps>;\ntype DispatchProps = typeof mapDispatchToProps;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HealthPage);\n"]}]}